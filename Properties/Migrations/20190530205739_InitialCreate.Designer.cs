// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Properties.Model;

namespace Properties.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190530205739_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Properties.Model.OtaAmenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ParentId");

                    b.Property<int?>("Value");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("OtaAmenity");
                });

            modelBuilder.Entity("Properties.Model.Property", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CurrentVersion")
                        .IsRequired();

                    b.Property<string>("Tenant")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CurrentVersion");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Properties.Model.PropertyVersion", b =>
                {
                    b.Property<string>("Version")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category")
                        .IsRequired();

                    b.Property<int>("DescriptionId");

                    b.Property<int>("NameId");

                    b.Property<string>("Tenant")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("Updated");

                    b.HasKey("Version");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("NameId");

                    b.ToTable("PropertyVersion");
                });

            modelBuilder.Entity("Properties.Model.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DescriptionId");

                    b.Property<int>("NameId");

                    b.Property<string>("PropertyVersionVersion");

                    b.Property<string>("RoomTypeId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("NameId");

                    b.HasIndex("PropertyVersionVersion");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Properties.Model.RoomType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DescriptionId");

                    b.Property<int>("NameId");

                    b.Property<string>("PropertyVersionVersion");

                    b.Property<string>("RoomTypeId");

                    b.HasKey("Id");

                    b.HasIndex("DescriptionId");

                    b.HasIndex("NameId");

                    b.HasIndex("PropertyVersionVersion");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("Properties.Model.Translations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Translations");
                });

            modelBuilder.Entity("Properties.Model.OtaAmenity", b =>
                {
                    b.HasOne("Properties.Model.RoomType", "Parent")
                        .WithMany("Amenities")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Properties.Model.Property", b =>
                {
                    b.HasOne("Properties.Model.PropertyVersion", "Current")
                        .WithMany()
                        .HasForeignKey("CurrentVersion")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Properties.Model.PropertyVersion", b =>
                {
                    b.HasOne("Properties.Model.Translations", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Properties.Model.Translations", "Name")
                        .WithMany()
                        .HasForeignKey("NameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsMany("Properties.Model.ContactInfo", "ContactInfos", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Email")
                                .IsRequired();

                            b1.Property<string>("Name")
                                .IsRequired();

                            b1.Property<string>("PropertyVersionId")
                                .IsRequired();

                            b1.Property<string>("Type")
                                .IsRequired();

                            b1.HasKey("Id");

                            b1.HasIndex("PropertyVersionId");

                            b1.ToTable("ContactInfo");

                            b1.HasOne("Properties.Model.PropertyVersion")
                                .WithMany("ContactInfos")
                                .HasForeignKey("PropertyVersionId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("Properties.Model.Address", "Address", b2 =>
                                {
                                    b2.Property<int>("ContactInfoId")
                                        .ValueGeneratedOnAdd()
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("CityName")
                                        .IsRequired();

                                    b2.Property<string>("CountryName")
                                        .IsRequired();

                                    b2.Property<string>("PostalCode")
                                        .IsRequired();

                                    b2.HasKey("ContactInfoId");

                                    b2.ToTable("ContactInfo");

                                    b2.HasOne("Properties.Model.ContactInfo")
                                        .WithOne("Address")
                                        .HasForeignKey("Properties.Model.Address", "ContactInfoId")
                                        .OnDelete(DeleteBehavior.Cascade);

                                    b2.OwnsMany("Properties.Model.AddressLine", "Lines", b3 =>
                                        {
                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                            b3.Property<int>("AddressId");

                                            b3.Property<string>("Content")
                                                .IsRequired();

                                            b3.Property<int>("LineNo");

                                            b3.Property<int>("ParentId");

                                            b3.HasKey("Id");

                                            b3.HasIndex("AddressId");

                                            b3.ToTable("AddressLine");

                                            b3.HasOne("Properties.Model.Address")
                                                .WithMany("Lines")
                                                .HasForeignKey("AddressId")
                                                .OnDelete(DeleteBehavior.Cascade);
                                        });
                                });

                            b1.OwnsMany("Properties.Model.PhoneInfo", "PhoneInfos", b2 =>
                                {
                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Number")
                                        .IsRequired();

                                    b2.Property<int>("PhoneInfoId");

                                    b2.Property<string>("Type")
                                        .IsRequired();

                                    b2.HasKey("Id");

                                    b2.HasIndex("PhoneInfoId");

                                    b2.ToTable("PhoneInfo");

                                    b2.HasOne("Properties.Model.ContactInfo")
                                        .WithMany("PhoneInfos")
                                        .HasForeignKey("PhoneInfoId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });

                    b.OwnsMany("Properties.Model.ImageLink", "Images", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Href")
                                .IsRequired()
                                .HasMaxLength(2000);

                            b1.Property<string>("PropertyVersionId")
                                .IsRequired();

                            b1.Property<int>("SortValue");

                            b1.HasKey("Id");

                            b1.HasIndex("PropertyVersionId");

                            b1.ToTable("ImageLink");

                            b1.HasOne("Properties.Model.PropertyVersion")
                                .WithMany("Images")
                                .HasForeignKey("PropertyVersionId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Properties.Model.Room", b =>
                {
                    b.HasOne("Properties.Model.Translations", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Properties.Model.Translations", "Name")
                        .WithMany()
                        .HasForeignKey("NameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Properties.Model.PropertyVersion")
                        .WithMany("Rooms")
                        .HasForeignKey("PropertyVersionVersion");

                    b.HasOne("Properties.Model.RoomType", "RoomType")
                        .WithMany()
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Properties.Model.RoomType", b =>
                {
                    b.HasOne("Properties.Model.Translations", "Description")
                        .WithMany()
                        .HasForeignKey("DescriptionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Properties.Model.Translations", "Name")
                        .WithMany()
                        .HasForeignKey("NameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Properties.Model.PropertyVersion")
                        .WithMany("RoomTypes")
                        .HasForeignKey("PropertyVersionVersion");

                    b.HasOne("Properties.Model.RoomType")
                        .WithMany("SubRooms")
                        .HasForeignKey("RoomTypeId");

                    b.OwnsMany("Properties.Model.ImageLink1", "Images", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Href")
                                .IsRequired()
                                .HasMaxLength(2000);

                            b1.Property<string>("RoomTypeId")
                                .IsRequired();

                            b1.Property<int>("SortValue");

                            b1.HasKey("Id");

                            b1.HasIndex("RoomTypeId");

                            b1.ToTable("ImageLink1");

                            b1.HasOne("Properties.Model.RoomType")
                                .WithMany("Images")
                                .HasForeignKey("RoomTypeId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsMany("Properties.Model.RoomTag", "Tags", b1 =>
                        {
                            b1.Property<string>("Tag")
                                .ValueGeneratedOnAdd();

                            b1.Property<string>("RoomTypeId")
                                .IsRequired();

                            b1.HasKey("Tag");

                            b1.HasIndex("RoomTypeId");

                            b1.ToTable("RoomTag");

                            b1.HasOne("Properties.Model.RoomType")
                                .WithMany("Tags")
                                .HasForeignKey("RoomTypeId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("Properties.Model.Translations", b =>
                {
                    b.OwnsMany("Properties.Model.Translations+Pair", "Values", b1 =>
                        {
                            b1.Property<string>("LanguageTag");

                            b1.Property<int>("TranslationsId");

                            b1.Property<string>("Value")
                                .IsRequired();

                            b1.HasKey("LanguageTag", "TranslationsId");

                            b1.HasIndex("TranslationsId");

                            b1.ToTable("Pair");

                            b1.HasOne("Properties.Model.Translations")
                                .WithMany("Values")
                                .HasForeignKey("TranslationsId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
